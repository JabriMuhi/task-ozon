type Link {
  id: ID!
  title: String!
  address: String!
  user: User!
}

type Query {
  links: [Link!]!
}

input NewLink {
  title: String!
  address: String!
}

input RefreshTokenInput{
  token: String!
}

input NewUser {
  username: String!
  password: String!
}

input Login {
  username: String!
  password: String!
}

type Mutation {
  createLink(input: NewLink!): Link!
  createUser(input: NewUser!): String!
  login(input: Login!): String!
  # we'll talk about this in authentication section
  refreshToken(input: RefreshTokenInput!): String!
  addPost(title: String!, content: String!, commentsAllowed: Boolean!): Post
  addComment(postId: ID!, parentId: ID, content: String!): Comment
  toggleCommentsAllowed(postId: ID!, commentsAllowed: Boolean!): Post
}

type User {
  id: ID!
  username: String!
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: User!
#  comments: [Comment]
  commentsAllowed: Boolean!
}

type Comment {
  id: ID!
  postId: ID!
  parentId: ID
  content: String!
  author: User!
  children: [Comment]
}

type Subscription {
  commentAdded(postID: ID!): Comment!
}