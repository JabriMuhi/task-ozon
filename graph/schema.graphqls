type Query {
  getPost(postId: Int!): Post
  getPosts(page: Int!, itemsByPage: Int!): [Post]
  getUser(userId: Int!): String!
  getPostComments(postId: Int!, startLevel: Int!, lastLevel: Int!, limit: Int!): [Comment]
  getChildrenComments(parentCommentId: Int!, startLevel: Int!, lastLevel: Int!, limit: Int!): [Comment]
}

type Mutation {
  addUser(username: String!, password: String!, email: String!): Int!
  deleteUser(userId: Int!): Int!
  addPost(title: String!, content: String!, commentsAllowed: Boolean!, userId: Int!): Int!
  changeCommentsAllowed(postId: Int!, commentsAllowed: Boolean!): Int!
  deletePost(postId: Int!): Int!
  deleteComment(commentId: Int!): Int!
  addComment(postId: Int!, content: String!, userId: Int!): Int!
  addReply(postId: Int!, parentCommentId: Int, userId: Int!, content: String!): Int!
}

type User {
  id: Int!
  username: String!
  password: String!
}

type Post {
  id: Int!
  title: String!
  content: String!
  author: User!
  commentsAllowed: Boolean!
}

type Comment {
  id: Int!
  postId: Int!
  parentId: Int
  content: String!
  author: User!
  level: Int!
}

type Subscription {
  commentAdded(postID: Int!): Comment!
}